language: cpp
os:
  - linux
  - osx
compiler:
  - gcc
  - clang
# Installing deps
install:
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo apt-get -qq update; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo apt-get install -y libdb++-dev libdb-dev openssl libssl-dev libboost-all-dev libboost-system-dev; fi
  # Update slows the process a lot, but is required to fix recent issues...
  # brew list depName &>/dev/null avoids errors with homebrew if the dep is already installed, otherwise it stops without completing the commands
  # The Boost URL links to v1.65.1 Boost on Homebrew's gihtub, as doing brew install boost installs v1.66.0, which is incompatible
  # The BerkeleyDB URL links to v6.1.26 BerkeleyDB on Homebrew's gihtub, as doing brew install berkeley-db installs v6.2
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew update; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew list openssl &>/dev/null || brew install openssl; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew list boost &>/dev/null || brew install https://raw.githubusercontent.com/Homebrew/homebrew-core/188bde41fe941f86a6937b6ab6a646a54431f2a3/Formula/boost.rb; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew list berkeley-db &>/dev/null || brew install https://raw.githubusercontent.com/Homebrew/homebrew-core/1e62c645b2fc2d82042d9f7c364c6a246f2e11ed/Formula/berkeley-db.rb; fi
script:
  # WITH_INCOMPATIBLE_BDB is needed because Ubuntu is on v5 Berkeley DB
  # OPENSSL_ROOT_DIR is needed because FindOpenSSL fails on macOS without it
  - _sharedsettings="-DCMAKE_BUILD_TYPE=Debug ../bin/vcashd/CMakeLists.txt"
  - mkdir -p build
  - cd build
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then cmake -DOPENSSL_ROOT_DIR=/usr/local/opt/openssl ${_sharedsettings}; else cmake ${_sharedsettings}; fi
  - make -j$(nproc)
notifications:
  webhooks:
    urls:
      - https://webhooks.gitter.im/e/bfacb369ceb017b610f6
    on_success: change  # options: [always|never|change] default: always
    on_failure: always  # options: [always|never|change] default: always
    on_start: never     # options: [always|never|change] default: always
